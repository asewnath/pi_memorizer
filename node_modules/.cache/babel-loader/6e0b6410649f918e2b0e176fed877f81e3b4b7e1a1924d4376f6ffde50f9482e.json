{"ast":null,"code":"var _jsxFileName = \"/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctPi = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\", \"9\", \"7\", \"9\", \"3\", \"2\", \"3\", \"8\", \"4\", \"6\", \"2\", \"6\", \"4\"];\nvar pi_index = 0;\nfunction DigitInput({\n  numberOfDigits\n}) {\n  _s();\n  // TODO:\n  // - have a \"correct\" message (check mark next to the box)\n  // - keep track of stream in a box\n\n  const [digits, setDigits] = useState(new Array(numberOfDigits).fill(\"\"));\n  const [piError, setPiError] = useState(null);\n  const [attempt, setAttempt] = useState(true);\n  const piBoxReference = useRef([]);\n  const resetDigits = () => {\n    let newArr = [...digits];\n    for (let i = 0; i < numberOfDigits; i++) {\n      newArr[i] = \"\";\n    }\n    setPiError(newArr);\n    piBoxReference.current[0].focus();\n  };\n  function handleChange(value, index) {\n    if (value === correctPi[index + pi_index]) {\n      let newArr = [...digits];\n      newArr[index] = value;\n      setDigits(newArr);\n      setPiError(null);\n      if (value && index < numberOfDigits - 1) {\n        piBoxReference.current[index + 1].focus();\n      }\n      if ((index + 1) % 6 === 0) {\n        pi_index = pi_index + 6;\n        resetDigits();\n        setAttempt(true);\n      }\n    } else {\n      if (attempt) {\n        setPiError(\"❌ Incorrect digit, one more try\");\n        setAttempt(false);\n      } else {\n        pi_index = 0;\n        resetDigits();\n        setPiError(null);\n        setAttempt(true);\n      }\n    }\n  }\n  useEffect(() => {\n    if (otp.join(\"\") === \"\") {\n      setPiError(null);\n    }\n  }, [digits]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl font-medium text-white mt-12\",\n      children: \"pi memorizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-white mt-6 mb-4\",\n      children: \"Enter digits of pi you know:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4\",\n      children: digits.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        value: digit,\n        maxLength: 1,\n        onChange: e => handleChange(e.target.value, index),\n        ref: reference => piBoxReference.current[index] = reference,\n        className: `border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-lg text-white mt-4 ${piError ? 'error-show' : ''}`,\n      children: piError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DigitInput, \"h1OmdDxxA7c85yavIKh3df8aQWM=\");\n_c = DigitInput;\nexport default DigitInput;\nvar _c;\n$RefreshReg$(_c, \"DigitInput\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","correctPi","pi_index","DigitInput","numberOfDigits","_s","digits","setDigits","Array","fill","piError","setPiError","attempt","setAttempt","piBoxReference","resetDigits","newArr","i","current","focus","handleChange","value","index","otp","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","digit","maxLength","onChange","e","target","ref","reference","_c","$RefreshReg$"],"sources":["/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst correctPi = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\",\n                   \"9\", \"7\", \"9\", \"3\", \"2\", \"3\", \"8\", \"4\", \"6\", \"2\", \"6\", \"4\"];\nvar pi_index = 0;\n\nfunction DigitInput({ numberOfDigits }) {\n  \n  // TODO:\n  // - have a \"correct\" message (check mark next to the box)\n  // - keep track of stream in a box\n\n  const [digits, setDigits] = useState(new Array(numberOfDigits).fill(\"\"));\n  const [piError, setPiError] = useState(null);\n  const [attempt, setAttempt] = useState(true);\n  const piBoxReference = useRef([]);\n\n  const resetDigits = () => {\n    let newArr = [...digits];\n    for(let i = 0; i < numberOfDigits; i++){\n      newArr[i] = \"\";\n    }\n    setPiError(newArr);\n    piBoxReference.current[0].focus();\n  }\n\n  function handleChange(value, index) {\n\n    if(value === correctPi[index + pi_index]){\n      let newArr = [...digits];\n      newArr[index] = value;\n      setDigits(newArr);\n      setPiError(null);\n\n      if(value && index < numberOfDigits-1){\n        piBoxReference.current[index + 1].focus();\n      }\n\n      if( (index + 1) % 6 === 0){\n        pi_index = pi_index + 6;\n        resetDigits();\n        setAttempt(true);\n      }\n\n    }else{\n      if(attempt){\n        setPiError(\"❌ Incorrect digit, one more try\");\n        setAttempt(false)\n      }else{\n        pi_index = 0;\n        resetDigits();\n        setPiError(null);\n        setAttempt(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if(otp.join(\"\") === \"\"){\n      setPiError(null);\n    }\n  }, [digits]);\n\n  return (\n    <article className=\"w-1/2\">\n      <p className=\"text-2xl font-medium text-white mt-12\">pi memorizer</p>\n      <p className=\"text-base text-white mt-6 mb-4\">Enter digits of pi you know:</p>\n     \n     <div className='flex items-center gap-4'>\n      {digits.map((digit, index)=>(\n        <input key={index} value={digit} maxLength={1}  \n        onChange={(e)=> handleChange(e.target.value, index)}\n        ref={(reference) => (piBoxReference.current[index] = reference)}\n        className={`border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`}\n        />\n      ))}\n\n     </div>\n\n      <p className={`text-lg text-white mt-4 ${piError ? 'error-show' : ''}`}>{piError}</p>\n    </article>\n  );\n}\n\nexport default DigitInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}