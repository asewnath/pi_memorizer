{"ast":null,"code":"var _jsxFileName = \"/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctOTP = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\"];\n//var updatedOTP = correctOTP; \n\nfunction DigitInput({\n  numberOfDigits\n}) {\n  _s();\n  // TODO:\n  // - enforce only digits\n  // - have a \"correct\" message (check mark next to the box)\n  // - keep track of stream in a box\n\n  const [otp, setOtp] = useState(new Array(numberOfDigits).fill(\"\"));\n  const [otpError, setOtpError] = useState(null);\n  const [attempt, setAttempt] = useState(true);\n  const otpBoxReference = useRef([]);\n  const resetDigits = () => {\n    let newArr = [...otp];\n    for (let i = 0; i < numberOfDigits; i++) {\n      newArr[i] = \"\";\n    }\n    setOtp(newArr);\n    otpBoxReference.current[0].focus();\n  };\n  function handleChange(value, index) {\n    var updatedOTP = correctOTP;\n    if (value === updatedOTP[index]) {\n      let newArr = [...otp];\n      newArr[index] = value;\n      setOtp(newArr);\n      //setOtpError(null);\n      setOtpError(updatedOTP[index]);\n      if (value && index < numberOfDigits - 1) {\n        otpBoxReference.current[index + 1].focus();\n      }\n      var element;\n      if ((index + 1) % 6 === 0) {\n        // Update block to show current 6\n        // Update updatedOTP to reflect next 6\n        for (let i = 0; i < 6; i++) {\n          //Shift may be fucking up updatedOTP\n          element = updatedOTP.shift();\n          // construct \"completed\" string with element with loop\n        }\n        resetDigits();\n        setAttempt(true);\n      }\n    } else {\n      if (attempt) {\n        setOtpError(\"❌ Incorrect digit, one more try\");\n        setAttempt(false);\n      } else {\n        resetDigits();\n        setOtpError(null);\n        setAttempt(true);\n        updatedOTP = correctOTP;\n      }\n    }\n  }\n  useEffect(() => {\n    if (otp.join(\"\") === \"\") {\n      setOtpError(null);\n    }\n  }, [otp]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl font-medium text-white mt-12\",\n      children: \"pi memorizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-white mt-6 mb-4\",\n      children: \"Enter digits of pi you know:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4\",\n      children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        value: digit,\n        maxLength: 1,\n        onChange: e => handleChange(e.target.value, index),\n        ref: reference => otpBoxReference.current[index] = reference,\n        className: `border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-lg text-white mt-4 ${otpError ? 'error-show' : ''}`,\n      children: otpError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(DigitInput, \"6Pr8cWZlBBWUrK5pzhG4thEn0J4=\");\n_c = DigitInput;\nexport default DigitInput;\nvar _c;\n$RefreshReg$(_c, \"DigitInput\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","correctOTP","DigitInput","numberOfDigits","_s","otp","setOtp","Array","fill","otpError","setOtpError","attempt","setAttempt","otpBoxReference","resetDigits","newArr","i","current","focus","handleChange","value","index","updatedOTP","element","shift","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","digit","maxLength","onChange","e","target","ref","reference","_c","$RefreshReg$"],"sources":["/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst correctOTP = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\"];\n//var updatedOTP = correctOTP; \n\nfunction DigitInput({ numberOfDigits }) {\n  \n  // TODO:\n  // - enforce only digits\n  // - have a \"correct\" message (check mark next to the box)\n  // - keep track of stream in a box\n\n  const [otp, setOtp] = useState(new Array(numberOfDigits).fill(\"\"));\n  const [otpError, setOtpError] = useState(null);\n  const [attempt, setAttempt] = useState(true);\n  const otpBoxReference = useRef([]);\n\n  const resetDigits = () => {\n    let newArr = [...otp];\n    for(let i = 0; i < numberOfDigits; i++){\n      newArr[i] = \"\";\n    }\n    setOtp(newArr);\n    otpBoxReference.current[0].focus();\n  }\n\n  function handleChange(value, index) {\n    var updatedOTP = correctOTP;\n    if(value === updatedOTP[index]){\n      let newArr = [...otp];\n      newArr[index] = value;\n      setOtp(newArr);\n      //setOtpError(null);\n      setOtpError(updatedOTP[index]);\n\n      if(value && index < numberOfDigits-1){\n        otpBoxReference.current[index + 1].focus();\n      }\n      var element;\n      if( (index + 1) % 6 === 0){\n        // Update block to show current 6\n        // Update updatedOTP to reflect next 6\n        for(let i = 0; i < 6; i++){\n          //Shift may be fucking up updatedOTP\n          element = updatedOTP.shift();\n          // construct \"completed\" string with element with loop\n        }\n        resetDigits();\n        setAttempt(true);\n      }\n    }else{\n      if(attempt){\n        setOtpError(\"❌ Incorrect digit, one more try\");\n        setAttempt(false)\n      }else{\n        resetDigits();\n        setOtpError(null);\n        setAttempt(true);\n        updatedOTP = correctOTP;\n      }\n    }\n  }\n\n  useEffect(() => {\n    if(otp.join(\"\") === \"\"){\n      setOtpError(null);\n    }\n  }, [otp]);\n\n  return (\n    <article className=\"w-1/2\">\n      <p className=\"text-2xl font-medium text-white mt-12\">pi memorizer</p>\n      <p className=\"text-base text-white mt-6 mb-4\">Enter digits of pi you know:</p>\n     \n     <div className='flex items-center gap-4'>\n      {otp.map((digit, index)=>(\n        <input key={index} value={digit} maxLength={1}  \n        onChange={(e)=> handleChange(e.target.value, index)}\n        ref={(reference) => (otpBoxReference.current[index] = reference)}\n        className={`border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`}\n        />\n      ))}\n\n     </div>\n\n      <p className={`text-lg text-white mt-4 ${otpError ? 'error-show' : ''}`}>{otpError}</p>\n    </article>\n  );\n}\n\nexport default DigitInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}