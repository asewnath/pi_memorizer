{"ast":null,"code":"var _jsxFileName = \"/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst correctOTP = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\"];\nfunction DigitInput({\n  numberOfDigits\n}) {\n  _s();\n  const [otp, setOtp] = useState(new Array(numberOfDigits).fill(\"\"));\n  //const [prevOtp, setPrevOtp] = useState()\n  const [otpError, setOtpError] = useState(null);\n  const otpBoxReference = useRef([]);\n\n  /*function handleChange(value, index) {\n    let newArr = [...otp];\n    newArr[index] = value;\n    setOtp(newArr);\n     if(value && index < numberOfDigits-1){\n      otpBoxReference.current[index + 1].focus()\n    }\n  }*/\n\n  function handleChange(value, index) {\n    if (value === correctOTP[index]) {\n      let newArr = [...otp];\n      newArr[index] = value;\n      setOtp(newArr);\n      setOtpError(null);\n      if (value && index < numberOfDigits - 1) {\n        otpBoxReference.current[index + 1].focus();\n      }\n    } else {\n      setOtpError(\"❌ Incorrect digit, please try again\");\n    }\n  }\n\n  // get arrow keys to work, what's with enter?\n  // somehow you need to not move to the next box\n  function handleBackspaceAndEnter(e, index) {\n    if (e.key === \"Backspace\" && !e.target.value && index > 0) {\n      otpBoxReference.current[index - 1].focus();\n    }\n    if (e.key === \"Enter\" && e.target.value && index < numberOfDigits - 1) {\n      otpBoxReference.current[index + 1].focus();\n    }\n  }\n\n  // Define empty_index\n  const isEmptyIndex = element => element === \"\";\n\n  // TODO:\n  // - enforce only digits\n  // - have a \"correct\" message\n\n  /*useEffect(() => {\n    let empty_index;\n    if(otp.join(\"\") === \"\"){\n      setOtpError(null);\n    }else{\n      empty_index = otp.findIndex(isEmptyIndex);\n      if(empty_index === -1) empty_index = 6;\n      if(otp.slice(0, empty_index).join(\"\") !== correctOTP.slice(0, empty_index).join(\"\")){\n        // stop user from skipping a box\n        setOtpError(\"❌ Wrong Digit Please Check Again\");\n      }else{\n        setOtpError(null);\n      }\n    }\n  }, [otp]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"w-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl font-medium text-white mt-12\",\n      children: \"pi memorizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-white mt-6 mb-4\",\n      children: \"Enter digits of pi:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4\",\n      children: otp.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        value: digit,\n        maxLength: 1,\n        onChange: e => handleChange(e.target.value, index),\n        onKeyUp: e => handleBackspaceAndEnter(e, index),\n        ref: reference => otpBoxReference.current[index] = reference,\n        className: `border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-lg text-white mt-4 ${otpError ? 'error-show' : ''}`,\n      children: otpError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(DigitInput, \"l/O9XJTZhc5lnDbCSo+/0wMTDgU=\");\n_c = DigitInput;\nexport default DigitInput;\nvar _c;\n$RefreshReg$(_c, \"DigitInput\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","correctOTP","DigitInput","numberOfDigits","_s","otp","setOtp","Array","fill","otpError","setOtpError","otpBoxReference","handleChange","value","index","newArr","current","focus","handleBackspaceAndEnter","e","key","target","isEmptyIndex","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","digit","maxLength","onChange","onKeyUp","ref","reference","_c","$RefreshReg$"],"sources":["/Users/asewnath/Documents/Github/react-advance-inputs/src/digitInput/index.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst correctOTP = [\"3\", \"1\", \"4\", \"1\", \"5\", \"9\", \"2\", \"6\", \"5\", \"3\", \"5\", \"8\"];\n\nfunction DigitInput({ numberOfDigits }) {\n  \n  const [otp, setOtp] = useState(new Array(numberOfDigits).fill(\"\"));\n  //const [prevOtp, setPrevOtp] = useState()\n  const [otpError, setOtpError] = useState(null);\n  const otpBoxReference = useRef([]);\n\n  /*function handleChange(value, index) {\n    let newArr = [...otp];\n    newArr[index] = value;\n    setOtp(newArr);\n\n    if(value && index < numberOfDigits-1){\n      otpBoxReference.current[index + 1].focus()\n    }\n  }*/\n\n  function handleChange(value, index) {\n    if(value === correctOTP[index]){\n      let newArr = [...otp];\n      newArr[index] = value;\n      setOtp(newArr);\n      setOtpError(null);\n\n      if(value && index < numberOfDigits-1){\n        otpBoxReference.current[index + 1].focus()\n      }\n    }else{\n      setOtpError(\"❌ Incorrect digit, please try again\");\n    }\n  }\n\n  // get arrow keys to work, what's with enter?\n  // somehow you need to not move to the next box\n  function handleBackspaceAndEnter(e, index) {\n    if(e.key === \"Backspace\" && !e.target.value && index > 0){\n        otpBoxReference.current[index - 1].focus()\n    }\n    if(e.key === \"Enter\" && e.target.value && index < numberOfDigits-1){\n      otpBoxReference.current[index + 1].focus()\n    }\n  }\n\n  // Define empty_index\n  const isEmptyIndex = (element) => element === \"\";\n\n  // TODO:\n  // - enforce only digits\n  // - have a \"correct\" message\n\n  /*useEffect(() => {\n    let empty_index;\n    if(otp.join(\"\") === \"\"){\n      setOtpError(null);\n    }else{\n      empty_index = otp.findIndex(isEmptyIndex);\n      if(empty_index === -1) empty_index = 6;\n      if(otp.slice(0, empty_index).join(\"\") !== correctOTP.slice(0, empty_index).join(\"\")){\n        // stop user from skipping a box\n        setOtpError(\"❌ Wrong Digit Please Check Again\");\n      }else{\n        setOtpError(null);\n      }\n    }\n  }, [otp]);*/\n\n  return (\n    <article className=\"w-1/2\">\n      <p className=\"text-2xl font-medium text-white mt-12\">pi memorizer</p>\n      <p className=\"text-base text-white mt-6 mb-4\">Enter digits of pi:</p>\n     \n     <div className='flex items-center gap-4'>\n      {otp.map((digit, index)=>(\n        <input key={index} value={digit} maxLength={1}  \n        onChange={(e)=> handleChange(e.target.value, index)}\n        onKeyUp={(e)=> handleBackspaceAndEnter(e, index)}\n        ref={(reference) => (otpBoxReference.current[index] = reference)}\n        className={`border w-20 h-auto text-white p-3 rounded-md block bg-black focus:border-2 focus:outline-none appearance-none`}\n        />\n      ))}\n\n     </div>\n\n      <p className={`text-lg text-white mt-4 ${otpError ? 'error-show' : ''}`}>{otpError}</p>\n    </article>\n  );\n}\n\nexport default DigitInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE/E,SAASC,UAAUA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAEtC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAIS,KAAK,CAACJ,cAAc,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC,CAAC;EAClE;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMa,eAAe,GAAGf,MAAM,CAAC,EAAE,CAAC;;EAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,SAASgB,YAAYA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAClC,IAAGD,KAAK,KAAKZ,UAAU,CAACa,KAAK,CAAC,EAAC;MAC7B,IAAIC,MAAM,GAAG,CAAC,GAAGV,GAAG,CAAC;MACrBU,MAAM,CAACD,KAAK,CAAC,GAAGD,KAAK;MACrBP,MAAM,CAACS,MAAM,CAAC;MACdL,WAAW,CAAC,IAAI,CAAC;MAEjB,IAAGG,KAAK,IAAIC,KAAK,GAAGX,cAAc,GAAC,CAAC,EAAC;QACnCQ,eAAe,CAACK,OAAO,CAACF,KAAK,GAAG,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;MAC5C;IACF,CAAC,MAAI;MACHP,WAAW,CAAC,qCAAqC,CAAC;IACpD;EACF;;EAEA;EACA;EACA,SAASQ,uBAAuBA,CAACC,CAAC,EAAEL,KAAK,EAAE;IACzC,IAAGK,CAAC,CAACC,GAAG,KAAK,WAAW,IAAI,CAACD,CAAC,CAACE,MAAM,CAACR,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAC;MACrDH,eAAe,CAACK,OAAO,CAACF,KAAK,GAAG,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;IAC9C;IACA,IAAGE,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACE,MAAM,CAACR,KAAK,IAAIC,KAAK,GAAGX,cAAc,GAAC,CAAC,EAAC;MACjEQ,eAAe,CAACK,OAAO,CAACF,KAAK,GAAG,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC;IAC5C;EACF;;EAEA;EACA,MAAMK,YAAY,GAAIC,OAAO,IAAKA,OAAO,KAAK,EAAE;;EAEhD;EACA;EACA;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACEvB,OAAA;IAASwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACxBzB,OAAA;MAAGwB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrE7B,OAAA;MAAGwB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEtE7B,OAAA;MAAKwB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACtCpB,GAAG,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEjB,KAAK,kBACpBd,OAAA;QAAmBa,KAAK,EAAEkB,KAAM;QAACC,SAAS,EAAE,CAAE;QAC9CC,QAAQ,EAAGd,CAAC,IAAIP,YAAY,CAACO,CAAC,CAACE,MAAM,CAACR,KAAK,EAAEC,KAAK,CAAE;QACpDoB,OAAO,EAAGf,CAAC,IAAID,uBAAuB,CAACC,CAAC,EAAEL,KAAK,CAAE;QACjDqB,GAAG,EAAGC,SAAS,IAAMzB,eAAe,CAACK,OAAO,CAACF,KAAK,CAAC,GAAGsB,SAAW;QACjEZ,SAAS,EAAG;MAA+G,GAJ/GV,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC,eAEL7B,OAAA;MAAGwB,SAAS,EAAG,2BAA0Bf,QAAQ,GAAG,YAAY,GAAG,EAAG,EAAE;MAAAgB,QAAA,EAAEhB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEd;AAACzB,EAAA,CAtFQF,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAwFnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}