{"ast":null,"code":"var _jsxFileName = \"/Users/asewnath/Documents/Github/react-advance-inputs/src/passwordInputWithValidation/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WrongIcon from '../icons/wrongIcon';\nimport CorrectIcon from '../icons/correctIcons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordInputWithValidation = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({\n    minValueValidation: false,\n    numberValidation: false,\n    capitalLetterValidation: false,\n    specialCharacterValidation: false\n  });\n  const handlePasswordChange = event => {\n    const newPassword = event.target.value;\n    setPassword(newPassword);\n    validatePassword(newPassword);\n  };\n  const validatePassword = password => {\n    setErrors({\n      minValueValidation: password.length >= 8,\n      numberValidation: /\\d/.test(password),\n      capitalLetterValidation: /[A-Z]/.test(password),\n      specialCharacterValidation: /[^A-Za-z0-9]/.test(password)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"w-1/2 mt-12 mb-24\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl font-medium text-white\",\n      children: \"Password Input With Validation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-white mt-4 bg-[#323232] p-4 rounded-md\",\n      children: \"In this Input box as the user types, it checks if the password is strong and secure. It looks for numbers, capital letters, and special characters to ensure a strong password. If the password is too short or missing any of these things, it shows an error message below with a shake animation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-white mt-6 mb-4\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: handlePasswordChange,\n      className: `border w-full text-white p-3 rounded-md mx-auto block bg-black focus:border-2 focus:outline-none`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), Object.entries(errors).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4 my-6\",\n      children: [value ? /*#__PURE__*/_jsxDEV(CorrectIcon, {\n        wrapperClass: \"w-4 h-auto text-white text-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(WrongIcon, {\n        wrapperClass: \"w-4 h-auto text-white text-red-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-base font-medium ${value ? 'text-green-500' : 'text-red-500'}`,\n        children: [key === 'minValueValidation' && 'Password must be at least 8 Characters', key === 'numberValidation' && 'Password must have at least one Number', key === 'capitalLetterValidation' && 'Password must have at least one Capital Letter', key === 'specialCharacterValidation' && 'Password must have at least one Special Character']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordInputWithValidation, \"V/5n5zFjSO/CWucEcXKNctz2OVY=\");\n_c = PasswordInputWithValidation;\nexport default PasswordInputWithValidation;\nvar _c;\n$RefreshReg$(_c, \"PasswordInputWithValidation\");","map":{"version":3,"names":["React","useState","WrongIcon","CorrectIcon","jsxDEV","_jsxDEV","PasswordInputWithValidation","_s","password","setPassword","errors","setErrors","minValueValidation","numberValidation","capitalLetterValidation","specialCharacterValidation","handlePasswordChange","event","newPassword","target","value","validatePassword","length","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","Object","entries","map","key","wrapperClass","_c","$RefreshReg$"],"sources":["/Users/asewnath/Documents/Github/react-advance-inputs/src/passwordInputWithValidation/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WrongIcon from '../icons/wrongIcon';\nimport CorrectIcon from '../icons/correctIcons';\n\nconst PasswordInputWithValidation = () => {\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({\n    minValueValidation: false,\n    numberValidation: false,\n    capitalLetterValidation: false,\n    specialCharacterValidation: false,\n  });\n\n  const handlePasswordChange = (event) => {\n    const newPassword = event.target.value;\n    setPassword(newPassword);\n    validatePassword(newPassword);\n  };\n\n  const validatePassword = (password) => {\n    setErrors({\n      minValueValidation: password.length >= 8,\n      numberValidation: /\\d/.test(password),\n      capitalLetterValidation: /[A-Z]/.test(password),\n      specialCharacterValidation: /[^A-Za-z0-9]/.test(password),\n    });\n  };\n\n  return (\n    <article className=\"w-1/2 mt-12 mb-24\">\n      <p className=\"text-2xl font-medium text-white\">Password Input With Validation</p>\n      <p className=\"text-base text-white mt-4 bg-[#323232] p-4 rounded-md\">In this Input box as the user types, it checks if the password is strong and secure. It looks for numbers, capital letters, and special characters to ensure a strong password. If the password is too short or missing any of these things, it shows an error message below with a shake animation.</p>\n      <p className=\"text-base text-white mt-6 mb-4\">Password</p>\n      <input\n        type=\"text\"\n        value={password}\n        onChange={handlePasswordChange}\n        className={`border w-full text-white p-3 rounded-md mx-auto block bg-black focus:border-2 focus:outline-none`}\n      />\n\n      {Object.entries(errors).map(([key, value]) => (\n        <div key={key} className=\"flex items-center gap-4 my-6\">\n          {value ? (\n            <CorrectIcon wrapperClass=\"w-4 h-auto text-white text-green-500\" />\n          ) : (\n            <WrongIcon wrapperClass=\"w-4 h-auto text-white text-red-500\" />\n          )}\n          <p className={`text-base font-medium ${value ? 'text-green-500' : 'text-red-500'}`}>\n            {key === 'minValueValidation' && 'Password must be at least 8 Characters'}\n            {key === 'numberValidation' && 'Password must have at least one Number'}\n            {key === 'capitalLetterValidation' && 'Password must have at least one Capital Letter'}\n            {key === 'specialCharacterValidation' && 'Password must have at least one Special Character'}\n          </p>\n        </div>\n      ))}\n    </article>\n  );\n};\n\nexport default PasswordInputWithValidation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}